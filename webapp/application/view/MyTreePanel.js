/*
 * File: application/view/MyTreePanel.js
 * Date: Sun Apr 28 2013 15:35:51 GMT+1000 (EST)
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyTreePanel', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.mytreepanel',

    requires: [
        'MyApp.view.ClearTriggerField',
        'MyApp.view.NewItemMenu'
    ],

    itemId: 'InvoiceTree',
    maxWidth: 350,
    minWidth: 150,
    width: 250,
    bodyBorder: true,
    collapsed: false,
    collapsible: true,
    header: false,
    hideCollapseTool: true,
    overlapHeader: false,
    titleCollapse: false,
    forceFit: false,
    store: 'InvoiceTree',
    folderSort: false,
    rootVisible: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                autoScroll: true,
                stripeRows: true,
                plugins: [
                    Ext.create('Ext.tree.plugin.TreeViewDragDrop', {
                        allowParentInserts: true,
                        appendOnly: true,
                        sortOnDrop: true
                    })
                ]
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'cleartrigger'
                        },
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            icon: '/images/settings.png',
                            menu: {
                                xtype: 'NewItemMenu'
                            }
                        }
                    ]
                }
            ],
            listeners: {
                itemcontextmenu: {
                    fn: me.onTreepanelItemContextMenu,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTreepanelItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        var menu = Ext.create('MyApp.view.TreeContextMenu', {});

        menu.showAt(e.getXY());
        e.stopEvent();
    }

});