/*
 * File: app/controller/Section.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Section', {
    extend: 'Ext.app.Controller',

    models: [
        'Section'
    ],
    stores: [
        'Section'
    ],
    views: [
        'SectionForm',
        'SectionTree',
        'NewSection'
    ],

    init: function(application) {
        this.control({
            '[action=new-section]':{
                click: this.newSection
            },
            '[action=save-section]':{
                click: this.saveSection
            },
            'section_tree':{
                itemclick: this.onTreeItemClick
            }
        });
    },

    loadSection: function(id) {
        var store = this.getStore("Section");
        var form = Ext.getCmp('section_form');

        form.setLoading(true);

        //load records from server, we cannot rely on the store having the current record loaded.
        //so we will have to ask the moel to load itseld.
        MyApp.model.Section.load(id, {
            scope: this,

            failure: function(record, operation) {
                alert('TODO error management');
            },

            success: function(record, operation) {
                form.loadRecord(record);
            },

            callback: function(record) {
                form.setLoading(false);
            }

        });

        //Ext.getCmp('main_container').getLayout().setActiveItem(1);

    },

    saveSection: function() {
        var form = Ext.getCmp('section_form');
        var record = form.getForm().getRecord();

        if (form.getForm().isValid()) {
            form.getForm().updateRecord(record);

            form.setLoading(true);
            record.save({

                failure: function(record, operation) {
                    alert('TODO error management');
                },

                success: function(record, operation) {
                    form.getForm().updateRecord(record);
                },

                callback: function(record) {
                    form.setLoading(false);
                }
            });

        }
    },

    onTreeItemClick: function(view, record, item, index, e, eOpts) {
        var type = record.data.object_type
        var id = record.data.object_id

        switch(type){
            case "Section":
            this.loadSection(id);
            break;
            case "Client":

            break;
        }
    },

    newSection: function(buttion, event) {
        var window = buttion.up('form').up('window');
        var form = buttion.up('form').getForm();

        if (form.isValid()) {
            var client = Ext.create('MyApp.model.Section', form.getFieldValues());
            client.save({
                success: function(record, operation){
                    if (operation.wasSuccessful()) {
                        var tree = Ext.getCmp('section_tree');
                        var node = tree.getRootNode( );
                        node.createNode(node);

                        window.hide();
                    } else {

                    }
                },

                failure: function(record, operation){

                }
            });
        }
    }

});
